/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_ABSTRACTSTUBSERVER_H_
#define JSONRPC_CPP_STUB_ABSTRACTSTUBSERVER_H_

#include <jsonrpccpp/server.h>

class AbstractStubServer : public jsonrpc::AbstractServer<AbstractStubServer>
{
    public:
        AbstractStubServer(jsonrpc::AbstractServerConnector &conn, jsonrpc::serverVersion_t type = jsonrpc::JSONRPC_SERVER_V2) : jsonrpc::AbstractServer<AbstractStubServer>(conn, type)
        {
            this->bindAndAddNotification(jsonrpc::Procedure("sync", jsonrpc::PARAMS_BY_NAME, "files",jsonrpc::JSON_ARRAY,"function_names",jsonrpc::JSON_ARRAY, NULL), &AbstractStubServer::syncI);
            this->bindAndAddNotification(jsonrpc::Procedure("compile", jsonrpc::PARAMS_BY_NAME,  NULL), &AbstractStubServer::compileI);
        }

        inline virtual void syncI(const Json::Value &request)
        {
            this->sync(request["files"], request["function_names"]);
        }
        inline virtual void compileI(const Json::Value &request)
        {
            (void)request;
            this->compile();
        }
        virtual void sync(const Json::Value& files, const Json::Value& function_names) = 0;
        virtual void compile() = 0;
};

#endif //JSONRPC_CPP_STUB_ABSTRACTSTUBSERVER_H_
